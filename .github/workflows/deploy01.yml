name: Build and Deploy to ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-north-1
  IMAGE_REPO: my-simple-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1 — Checkout the repo
      - name: Checkout source code
        uses: actions/checkout@v4

      # Step 2 — Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3 — Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 4 — Log in to Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | \
          docker login --username AWS --password-stdin $(echo "${{ secrets.ECR_REGISTRY }}" | tr -d '\n' | tr -d '\r')

      # Step 5 — Build and push multi-arch Docker image
      - name: Build and push Docker image (multi-arch)
        run: |
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la

          IMAGE_TAG=${{ github.sha }}

          # Clean and assign registry
          ECR_REGISTRY=$(echo "${{ secrets.ECR_REGISTRY }}" | tr -d '\n' | tr -d '\r')

          IMAGE_NAME="${ECR_REGISTRY}/${{ env.IMAGE_REPO }}:$IMAGE_TAG"
          LATEST_NAME="${ECR_REGISTRY}/${{ env.IMAGE_REPO }}:latest"

          echo "Building image: $IMAGE_NAME"
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t "$IMAGE_NAME" \
            -t "$LATEST_NAME" \
            --push .

      # Optional Step 6 — Show confirmation
      - name: Deployment complete
        run: echo "✅ Successfully built and pushed Docker image to ECR!"
